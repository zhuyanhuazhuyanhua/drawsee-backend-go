# 背景
我们正在为具有高中的数学/物理基础，并且在学习大学数学/物理的大学生制作manim动画，以几何化，可视化的方式呈现知识点，以帮助他们更好地理解数学/物理概念和知识。

# 任务
请从：
- 概念背景（为什么需要这个概念）
- 推导过程（推导过程需要详细，包括每一步的推导过程）
- 概念详解（概念的定义、性质、定理等）
- 概念应用（概念的应用场景、应用实例等）
这些角度针对<用户疑问>构思一个manim可视化讲解视频，以`几何化`的方式讲解概念（这个很重要），并描述画面的具体内容，生成这个视频的分镜和脚本

# 用户疑问
<用户疑问>
{{question}}
</用户疑问>

# 输出要求
输出分镜数量要求在10个以内。
格式为JSON格式的列表，引号必须为双引号，需要能被Java中jackson的ObjectMapper的readValue所解析。只需输出纯JSON格式即可，无需任何前置解释，即你的整个输出是能被JSON解析的。
格式规定为：
[
    {
        "shotDescription": "...",
        "shotScript": "..."
    },
    ...
]
其中，shotDescription 表示镜头描述，shotScript 表示镜头脚本。

# 输出示例
<我的疑问>
矩阵相乘是怎么回事？
</我的疑问>
<输出>
[
    {
        "shotDescription": "画面以三维空间的视角呈现，从远处飞来两个由方块组成的矩阵模型，一个是2x3的矩阵A，另一个是3x2的矩阵B，慢慢停在画面中央，矩阵的元素以亮色显示。",
        "shotScript": "同学们好，今天我们来深入了解矩阵相乘。现在呈现在大家眼前的，就是我们即将进行乘法运算的两个矩阵，矩阵A是2行3列，矩阵B是3行2列。在数学中，我们常常需要处理大量的数据关系，矩阵乘法就是一种非常重要的运算方式。"
    },
    {
        "shotDescription": "矩阵A的第一行的元素逐个发出光线，同时矩阵B的第一列的元素也发出光线，光线交汇，且交汇点用不同颜色的光点显示。",
        "shotScript": "矩阵相乘有它特定的规则。首先，我们看矩阵A的第一行和矩阵B的第一列，我们要将它们对应元素相乘再相加。这些光线就代表了我们寻找对应元素的过程。"
    },
    {
        "shotDescription": "矩阵A第一行的第一个元素与矩阵B第一列的第一个元素之间的光线变成加粗的红色，同时在旁边出现它们的乘积数值，接着其他对应元素之间也依次出现乘积数值。",
        "shotScript": "看，这第一个元素之间的乘法运算就像这样，A的第一行第一个元素乘以B的第一列第一个元素，得到一个乘积。然后依次对其他对应元素进行乘法运算。"
    },
    {
        "shotDescription": "所有乘积数值以动画形式汇聚到一起，形成一个新的数值，这个数值慢慢移动到结果矩阵C的第一行第一列的位置。",
        "shotScript": "最后，我们把这些乘积相加，得到的结果就是我们结果矩阵C中第一行第一列的元素值。"
    },
    {
        "shotDescription": "矩阵A的第一行的元素再次发出光线，这次是射向矩阵B的第二列的元素，光线交汇，且交汇点用不同颜色的光点显示，随后重复乘法和求和的动画过程，结果数值移动到结果矩阵C的第一行第二列的位置。",
        "shotScript": "接下来，我们用矩阵A的第一行和矩阵B的第二列进行同样的操作，按照对应元素相乘再相加的规则，得到结果矩阵C中第一行第二列的元素值。"
    },
    {
        "shotDescription": "矩阵A的第二行的元素发出光线，射向矩阵B的第一列的元素，重复之前的乘法、求和以及数值移动到结果矩阵C相应位置（第二行第一列）的动画过程。",
        "shotScript": "现在轮到矩阵A的第二行和矩阵B的第一列了。同样的方法，对应元素相乘再相加，得出结果矩阵C中第二行第一列的元素值。"
    },
    {
        "shotDescription": "矩阵A的第二行的元素发出光线，射向矩阵B的第二列的元素，完成最后一次乘法、求和以及数值移动到结果矩阵C相应位置（第二行第二列）的动画过程，展示出完整的2x2的结果矩阵C。",
        "shotScript": "最后一步，矩阵A的第二行和矩阵B的第二列进行运算，得到结果矩阵C的最后一个元素值。这样，我们就得到了完整的结果矩阵C。"
    },
    {
        "shotDescription": "画面切换到一个平面直角坐标系，上面有一个三角形，旁边出现一个表示旋转的矩阵。矩阵与三角形的顶点坐标矩阵相乘，三角形随着运算过程慢慢旋转。",
        "shotScript": "矩阵乘法在几何变换中有着广泛应用。比如现在这个三角形，我们可以通过与一个旋转矩阵相乘，实现它的旋转。这就是矩阵乘法在几何领域的一个体现。"
    },
    {
        "shotDescription": "画面再次切换，直角坐标系中出现一个正方形，旁边出现一个表示缩放的矩阵，矩阵与正方形的顶点坐标矩阵相乘，正方形随着运算过程放大或缩小。",
        "shotScript": "除了旋转，矩阵乘法还能实现缩放。就像这个正方形，与缩放矩阵相乘后，它就会按照相应的比例放大或缩小。可见，矩阵乘法在处理几何图形的变换时非常有用。"
    },
    {
        "shotDescription": "画面回到两个原始矩阵A和B以及结果矩阵C，三个矩阵闪烁，同时出现文字总结矩阵乘法的规则和应用。",
        "shotScript": "总结一下，矩阵乘法是对应元素相乘再相加，结果矩阵的行数等于第一个矩阵的行数，列数等于第二个矩阵的列数。并且它在几何变换等领域有着重要的应用。希望大家通过这个可视化的展示，对矩阵相乘有更清晰的理解。"
    }
]
</输出>